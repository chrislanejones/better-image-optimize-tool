{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx", "../../../app/components/ui/DropZone.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1742548769540.026\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Form, useNavigate } from \"@remix-run/react\";\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"~/components/ui/Card\";\nimport { Button } from \"~/components/ui/Button\";\nimport { DropZone } from \"~/components/ui/DropZone\";\nexport default function Index() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [pasteEnabled, setPasteEnabled] = useState(true);\n  const dropZoneRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Debug effect to log when files are added\n  useEffect(() => {\n    if (files.length > 0) {\n      console.log(`Files updated, count: ${files.length}`);\n    }\n  }, [files]);\n\n  // Set up paste event listener for the entire document\n  useEffect(() => {\n    const handlePaste = e => {\n      if (!pasteEnabled) return;\n\n      // Clear any previous errors\n      setErrorMessage(null);\n      console.log(\"Paste event detected\");\n      if (e.clipboardData && e.clipboardData.items) {\n        const items = e.clipboardData.items;\n        const imageItems = [];\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") !== -1) {\n            const blob = items[i].getAsFile();\n            if (blob) {\n              // Create a File object from the Blob\n              // Use a timestamp to create a unique name for pasted images\n              const timestamp = new Date().toISOString().replace(/:/g, \"-\");\n              const file = new File([blob], `pasted-image-${timestamp}.png`, {\n                type: blob.type\n              });\n              imageItems.push(file);\n            }\n          }\n        }\n        if (imageItems.length > 0) {\n          console.log(`Pasted ${imageItems.length} images`);\n\n          // Either add to existing files or set as new files\n          setFiles(prevFiles => [...prevFiles, ...imageItems]);\n\n          // Auto-navigate to gallery after paste\n          processFilesAndNavigate([...files, ...imageItems]);\n\n          // Prevent the default paste behavior\n          e.preventDefault();\n        } else {\n          setErrorMessage(\"No valid images found in the clipboard. Try copying an image first.\");\n          e.preventDefault();\n        }\n      }\n    };\n\n    // Add the event listener\n    document.addEventListener(\"paste\", handlePaste);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"paste\", handlePaste);\n    };\n  }, [files, pasteEnabled]);\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  };\n\n  // State for error messages\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Helper function to process files and navigate to gallery\n  const processFilesAndNavigate = newFiles => {\n    // Clear any previous errors\n    setErrorMessage(null);\n    if (newFiles.length === 0) {\n      setErrorMessage(\"No valid image files were selected.\");\n      return;\n    }\n    console.log(\"Processing files for navigation:\", newFiles.length);\n    try {\n      // Validate that all files are images\n      const validImageFiles = newFiles.filter(file => file.type.startsWith(\"image/\"));\n      if (validImageFiles.length === 0) {\n        setErrorMessage(\"Please select valid image files only.\");\n        return;\n      }\n      if (validImageFiles.length < newFiles.length) {\n        console.warn(\"Some non-image files were filtered out\");\n      }\n\n      // Create file data objects for each file\n      const fileData = validImageFiles.map(file => ({\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        // Create temporary URL for preview\n        url: URL.createObjectURL(file)\n      }));\n      console.log(\"File data created:\", fileData.length);\n\n      // Store file info in sessionStorage to pass to next page\n      sessionStorage.setItem(\"uploadedImages\", JSON.stringify(fileData));\n      console.log(\"Session storage updated\");\n\n      // Navigate to gallery page - use setTimeout to ensure storage is set\n      setTimeout(() => {\n        console.log(\"Navigating to gallery...\");\n        navigate(\"/gallery\");\n      }, 100);\n    } catch (error) {\n      console.error(\"Error processing files:\", error);\n      setErrorMessage(\"An error occurred while processing the files. Please try again.\");\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n\n    // Clear any previous errors\n    setErrorMessage(null);\n    console.log(\"Files dropped\");\n    try {\n      if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n        const allFiles = Array.from(e.dataTransfer.files);\n        const newFiles = allFiles.filter(file => file.type.startsWith(\"image/\"));\n        if (newFiles.length === 0) {\n          console.log(\"No valid image files found in drop\");\n          setErrorMessage(allFiles.length > 0 ? \"The dropped items aren't valid images. Please drop image files only.\" : \"No files were detected in the drop.\");\n          return;\n        }\n        if (newFiles.length < allFiles.length) {\n          console.log(`Filtered out ${allFiles.length - newFiles.length} non-image files`);\n        }\n        console.log(`Dropped ${newFiles.length} image files`);\n        setFiles(newFiles);\n\n        // Process files and navigate to gallery\n        processFilesAndNavigate(newFiles);\n      } else {\n        setErrorMessage(\"No files were detected in the drop. Try again with image files.\");\n      }\n    } catch (error) {\n      console.error(\"Error processing dropped files:\", error);\n      setErrorMessage(\"An error occurred while processing the dropped files.\");\n    }\n  };\n  const handleFileSelect = e => {\n    console.log(\"File input change detected\");\n\n    // Clear any previous errors\n    setErrorMessage(null);\n    if (e.target.files && e.target.files.length > 0) {\n      try {\n        const newFiles = Array.from(e.target.files).filter(file => file.type.startsWith(\"image/\"));\n        if (newFiles.length === 0) {\n          console.log(\"No valid image files selected\");\n          setErrorMessage(\"Please select valid image files only.\");\n          return;\n        }\n        console.log(`Selected ${newFiles.length} image files via input`);\n        setFiles(newFiles);\n\n        // Process files and navigate to gallery\n        processFilesAndNavigate(newFiles);\n      } catch (error) {\n        console.error(\"Error processing selected files:\", error);\n        setErrorMessage(\"An error occurred processing the selected files.\");\n      }\n    } else {\n      // No files were selected (user canceled dialog)\n      console.log(\"File selection canceled\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Form submitted\");\n\n    // If files are already selected, process them\n    if (files.length > 0) {\n      processFilesAndNavigate(files);\n    }\n  };\n\n  // Focus on the drop zone to enable easier paste\n  const focusDropZone = () => {\n    if (dropZoneRef.current) {\n      dropZoneRef.current.focus();\n    }\n  };\n  return <div className=\"max-w-4xl mx-auto p-4 md:p-8\">\n      <Card className=\"w-full\">\n        <CardHeader>\n          <CardTitle className=\"text-center\">Photo Upload</CardTitle>\n        </CardHeader>\n\n        <CardContent>\n          <div className=\"flex justify-center mb-8\">\n            {/* SVG Polaroid embedded inline */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 350\" className=\"w-56 md:w-72 h-auto filter drop-shadow transition-transform duration-300 hover:scale-105\">\n              <rect x=\"20\" y=\"20\" width=\"260\" height=\"310\" rx=\"5\" ry=\"5\" fill=\"white\" stroke=\"#e0e0e0\" strokeWidth=\"2\" />\n              <rect x=\"40\" y=\"40\" width=\"220\" height=\"220\" fill=\"#f5f5f5\" stroke=\"#e0e0e0\" strokeWidth=\"1\" />\n              <rect x=\"40\" y=\"260\" width=\"220\" height=\"50\" fill=\"white\" />\n              <rect x=\"25\" y=\"25\" width=\"260\" height=\"310\" rx=\"5\" ry=\"5\" fill=\"none\" stroke=\"#d0d0d0\" strokeWidth=\"1\" opacity=\"0.5\" />\n              <path d=\"M40,40 L50,50 M260,40 L250,50 M40,260 L50,250 M260,260 L250,250\" stroke=\"#e0e0e0\" strokeWidth=\"1\" />\n            </svg>\n          </div>\n\n          <Form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\n            <DropZone ref={dropZoneRef} isDragging={isDragging} hasFiles={files.length > 0} onDragOver={handleDragOver} onDragLeave={handleDragLeave} onDrop={handleDrop} onClick={focusDropZone} tabIndex={0}>\n              <div className=\"flex flex-col items-center justify-center space-y-2\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 text-slate-400 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                </svg>\n                <p className=\"text-slate-600 font-medium\">\n                  Drag & drop images here\n                </p>\n                <p className=\"text-slate-500 text-sm\">\u2014 or \u2014</p>\n                <p className=\"text-slate-500 text-sm\">\n                  Paste an image (Ctrl+V)\n                </p>\n              </div>\n            </DropZone>\n\n            {files.length > 0 && <Card>\n                <CardContent className=\"pt-6\">\n                  <h3 className=\"text-lg font-medium text-slate-800 mb-4\">\n                    Selected Images ({files.length})\n                  </h3>\n                  <ul className=\"list-none p-0 max-h-48 overflow-y-auto divide-y divide-slate-200\">\n                    {files.map((file, index) => <li key={index} className=\"py-2 flex items-center justify-between\">\n                        <span className=\"truncate max-w-xs\">{file.name}</span>\n                        <span className=\"text-sm text-slate-500\">\n                          ({Math.round(file.size / 1024)} KB)\n                        </span>\n                      </li>)}\n                  </ul>\n                </CardContent>\n                <CardFooter className=\"justify-end\">\n                  <Button type=\"submit\" variant=\"success\" onClick={() => processFilesAndNavigate(files)}>\n                    Continue to Gallery\n                  </Button>\n                </CardFooter>\n              </Card>}\n          </Form>\n        </CardContent>\n        <CardFooter className=\"flex flex-col items-center justify-center text-sm text-slate-500\">\n          <p>Click or tap anywhere in the drop zone to enable paste</p>\n          <p className=\"mt-1\">\n            You can paste (Ctrl+V) an image from your clipboard\n          </p>\n        </CardFooter>\n      </Card>\n    </div>;\n}\n_s(Index, \"IhoF3hWaZqDT9qdnVYvhvx2SIJg=\", false, function () {\n  return [useNavigate];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/DropZone.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/DropZone.tsx\");\n  import.meta.hot.lastModified = \"1742547617867.552\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\n\n// Create a type extension for the HTMLInputElement to add directory attributes\n\nconst DropZone = React.forwardRef(_c = ({\n  className,\n  isDragging,\n  hasFiles,\n  onDrop,\n  onDragOver,\n  onDragLeave,\n  children,\n  ...props\n}, ref) => {\n  const handleDragOver = e => {\n    // Prevent default behavior to allow drop\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Explicitly add dataTransfer.dropEffect\n    e.dataTransfer.dropEffect = \"copy\";\n\n    // Call the original handler\n    if (onDragOver) {\n      onDragOver(e);\n    }\n  };\n  const handleKeyDown = e => {\n    // Simulate click on Space or Enter to help with keyboard accessibility\n    if (e.key === \" \" || e.key === \"Enter\") {\n      e.currentTarget.click();\n      e.preventDefault();\n    }\n\n    // Support Ctrl+V for paste\n    if (e.ctrlKey && e.key === \"v\") {\n      console.log(\"Keyboard paste detected\");\n      // The actual paste event will be handled by the global handler\n    }\n  };\n  return <div ref={ref} className={`\n          w-full \n          border-2 \n          border-dashed \n          rounded-lg \n          p-8 \n          text-center \n          cursor-pointer \n          transition-all \n          outline-none\n          focus:ring-2\n          focus:ring-blue-500\n          focus:border-blue-500\n          ${isDragging ? \"border-blue-600 bg-blue-50\" : \"\"} \n          ${hasFiles ? \"border-green-600 bg-green-50\" : \"border-slate-300 bg-slate-50\"} \n          ${className || \"\"}\n        `} onDrop={onDrop} onDragOver={handleDragOver} onDragLeave={onDragLeave} onKeyDown={handleKeyDown}\n  // Add aria attributes for accessibility\n  role=\"button\" aria-label=\"Drop zone for image upload. You can also paste images here.\" {...props}>\n        {children}\n      </div>;\n});\n_c2 = DropZone;\nDropZone.displayName = \"DropZone\";\nexport { DropZone };\nvar _c, _c2;\n$RefreshReg$(_c, \"DropZone$React.forwardRef\");\n$RefreshReg$(_c2, \"DropZone\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
