{
  "version": 3,
  "sources": ["../../../app/routes/gallery.tsx", "../../../app/components/gallery/ThumbnailGallery.tsx", "../../../app/components/gallery/ImagePreview.tsx", "../../../app/components/gallery/ImageModal.tsx", "../../../app/components/gallery/ControlsCard.tsx", "../../../app/components/ui/SimpleSelect.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/gallery.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/gallery.tsx\");\n  import.meta.hot.lastModified = \"1743477369985.0837\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { retrieveFileData, clearAllImagesFromStorage, updateImagesInStorage, processImage, cropImage, resizeImage, createEditedFileData } from \"~/utils/fileUtils\";\nimport ThumbnailGallery from \"~/components/gallery/ThumbnailGallery\";\nimport ImagePreview from \"~/components/gallery/ImagePreview\";\nimport ImageModal from \"~/components/gallery/ImageModal\";\nimport ControlsCard from \"~/components/gallery/ControlsCard\";\nexport default function Gallery() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [expandedImage, setExpandedImage] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const imagesPerPage = 9;\n\n  // Image editing state\n  const [cropMode, setCropMode] = useState(false);\n  const [cropStartX, setCropStartX] = useState(null);\n  const [cropStartY, setCropStartY] = useState(null);\n  const [cropRect, setCropRect] = useState(null);\n  const [formatOption, setFormatOption] = useState(\"original\");\n  const [compressionLevel, setCompressionLevel] = useState(90);\n\n  // Reference to the original image for processing\n  const imageElementRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Calculate pagination\n  const indexOfLastImage = currentPage * imagesPerPage;\n  const indexOfFirstImage = indexOfLastImage - imagesPerPage;\n  const currentImages = images.slice(indexOfFirstImage, indexOfLastImage);\n  const totalPages = Math.ceil(images.length / imagesPerPage);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  useEffect(() => {\n    // Load images from localStorage\n    const storedImages = retrieveFileData();\n    if (storedImages && storedImages.length > 0) {\n      setImages(storedImages);\n      setSelectedImage(storedImages[0]);\n      setCurrentImageIndex(0);\n    } else if (storedImages && storedImages.length === 0) {\n      setImages([]);\n      setSelectedImage(null);\n    } else {\n      // No images found, redirect to upload page\n      const timer = setTimeout(() => {\n        navigate(\"/\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [navigate]);\n\n  // Load the current image for editing when it changes\n  useEffect(() => {\n    if (selectedImage) {\n      const img = new Image();\n      img.onload = () => {\n        imageElementRef.current = img;\n      };\n      img.src = selectedImage.url;\n\n      // Reset editing state\n      setCropMode(false);\n      setCropRect(null);\n      setFormatOption(\"original\");\n      setCompressionLevel(90);\n    }\n  }, [selectedImage]);\n\n  // Image selection and navigation\n  const handleImageSelect = (image, index) => {\n    setSelectedImage(image);\n    setCurrentImageIndex(index);\n  };\n  const navigateNext = () => {\n    if (images.length === 0) return;\n    const nextIndex = (currentImageIndex + 1) % images.length;\n    setSelectedImage(images[nextIndex]);\n    setCurrentImageIndex(nextIndex);\n  };\n  const navigatePrevious = () => {\n    if (images.length === 0) return;\n    const prevIndex = (currentImageIndex - 1 + images.length) % images.length;\n    setSelectedImage(images[prevIndex]);\n    setCurrentImageIndex(prevIndex);\n  };\n\n  // Gallery management functions\n  const clearAllImages = () => {\n    clearAllImagesFromStorage();\n    setImages([]);\n    setSelectedImage(null);\n  };\n  const removeImage = index => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n\n    // Update state and storage\n    setImages(newImages);\n    updateImagesInStorage(newImages);\n\n    // If removing the selected image, select another image\n    if (currentImageIndex === index) {\n      if (newImages.length > 0) {\n        const newIndex = Math.min(index, newImages.length - 1);\n        setSelectedImage(newImages[newIndex]);\n        setCurrentImageIndex(newIndex);\n      } else {\n        setSelectedImage(null);\n      }\n    } else if (currentImageIndex > index) {\n      // If removing an image before the selected one, adjust the index\n      setCurrentImageIndex(currentImageIndex - 1);\n    }\n  };\n\n  // Function to expand an image\n  const expandImage = image => {\n    setExpandedImage(image);\n  };\n\n  // Crop handling functions\n  const handleCropStart = (x, y) => {\n    setCropStartX(x);\n    setCropStartY(y);\n    setCropRect(null);\n  };\n  const handleCropMove = (x, y) => {\n    if (cropStartX === null || cropStartY === null) return;\n    setCropRect({\n      x: Math.min(cropStartX, x),\n      y: Math.min(cropStartY, y),\n      width: Math.abs(x - cropStartX),\n      height: Math.abs(y - cropStartY)\n    });\n  };\n  const handleCropEnd = () => {\n    setCropStartX(null);\n    setCropStartY(null);\n  };\n\n  // Toggle crop mode\n  const toggleCropMode = () => {\n    setCropMode(!cropMode);\n    if (cropMode) {\n      // Exiting crop mode, clear crop rectangle\n      setCropRect(null);\n    }\n  };\n\n  // Apply crop\n  const applyCrop = async () => {\n    if (!cropRect || !imageElementRef.current || !selectedImage) return;\n\n    // Get reference to the preview container to calculate scale\n    const previewContainer = document.querySelector(\".image-preview-container\");\n    if (!previewContainer) return;\n    try {\n      const editedBlob = await cropImage(imageElementRef.current, cropRect, formatOption, compressionLevel, previewContainer);\n      saveEditedImage(editedBlob);\n\n      // Exit crop mode\n      setCropMode(false);\n      setCropRect(null);\n    } catch (error) {\n      console.error(\"Error applying crop:\", error);\n    }\n  };\n\n  // Apply all changes (format and compression)\n  const applyChanges = async () => {\n    if (!imageElementRef.current || !selectedImage) return;\n    try {\n      const editedBlob = await processImage(imageElementRef.current, formatOption, compressionLevel);\n      saveEditedImage(editedBlob);\n    } catch (error) {\n      console.error(\"Error applying changes:\", error);\n    }\n  };\n\n  // Apply dimension changes\n  const handleDimensionsChange = async (width, height, maintainAspectRatio) => {\n    if (!imageElementRef.current || !selectedImage) return;\n    try {\n      const editedBlob = await resizeImage(imageElementRef.current, width, height, formatOption, compressionLevel);\n      saveEditedImage(editedBlob);\n    } catch (error) {\n      console.error(\"Error resizing image:\", error);\n    }\n  };\n\n  // Reset all changes\n  const cancelChanges = () => {\n    // Just reload the current image to reset all edits\n    if (selectedImage) {\n      const img = new Image();\n      img.onload = () => {\n        imageElementRef.current = img;\n      };\n      img.src = selectedImage.url;\n\n      // Reset editing state\n      setCropMode(false);\n      setCropRect(null);\n      setFormatOption(\"original\");\n      setCompressionLevel(90);\n    }\n  };\n\n  // Save edited image\n  const saveEditedImage = editedBlob => {\n    if (!selectedImage) return;\n\n    // Create new file data from edited blob\n    const newImage = createEditedFileData(selectedImage, editedBlob, formatOption);\n\n    // Update the image in the array\n    const newImages = [...images];\n    newImages[currentImageIndex] = newImage;\n\n    // Update state and storage\n    setImages(newImages);\n    setSelectedImage(newImage);\n    updateImagesInStorage(newImages);\n\n    // Reload the image for further editing\n    const img = new Image();\n    img.onload = () => {\n      imageElementRef.current = img;\n    };\n    img.src = newImage.url;\n  };\n  return <div className=\"bg-background transition-colors\">\n      {/* Gallery Content */}\n      <div className=\"container mx-auto p-4\">\n        {/* Thumbnail Gallery with integrated navigation */}\n        <ThumbnailGallery images={images} selectedImage={selectedImage} onSelectImage={handleImageSelect} onRemoveImage={removeImage} onExpandImage={expandImage} onClearAll={clearAllImages} onNext={navigateNext} onPrevious={navigatePrevious} currentIndex={currentImageIndex} totalImages={images.length} onChangePage={paginate} currentPage={currentPage} totalPages={totalPages} />\n\n        {/* Selected Image Display and Controls */}\n        {selectedImage && <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n            {/* Image Preview */}\n            <div className=\"image-preview-container md:col-span-3\">\n              <ImagePreview image={selectedImage} cropMode={cropMode} cropRect={cropRect} onCropStart={handleCropStart} onCropMove={handleCropMove} onCropEnd={handleCropEnd} />\n            </div>\n\n            {/* Controls Card */}\n            <div className=\"md:col-span-1\">\n              <ControlsCard image={selectedImage} cropMode={cropMode} formatOption={formatOption} compressionLevel={compressionLevel} onToggleCrop={toggleCropMode} onFormatChange={setFormatOption} onCompressionChange={setCompressionLevel} onDimensionsChange={handleDimensionsChange} onApplyChanges={applyChanges} onCancelChanges={cancelChanges} hasCropSelection={cropRect !== null} onApplyCrop={applyCrop} />\n            </div>\n          </div>}\n\n        {/* Grid view of images for the current page */}\n        {images.length > 0 && !selectedImage && <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {currentImages.map((image, index) => <div className=\"relative cursor-pointer bg-card rounded overflow-hidden\" key={index} onClick={() => handleImageSelect(image, indexOfFirstImage + index)}>\n                <img src={image.url} alt={`Gallery image ${indexOfFirstImage + index + 1}`} className=\"w-full h-64 object-cover rounded shadow-sm\" />\n              </div>)}\n          </div>}\n      </div>\n\n      {/* Image Modal for expanded view */}\n      <ImageModal image={expandedImage} onClose={() => setExpandedImage(null)} />\n    </div>;\n}\n_s(Gallery, \"tq4B1b4RWzvQGfXxJ6NXQ9Uio/4=\", false, function () {\n  return [useNavigate];\n});\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/gallery/ThumbnailGallery.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/gallery/ThumbnailGallery.tsx\");\n  import.meta.hot.lastModified = \"1743478869225.0815\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { Link } from \"@remix-run/react\";\nimport { Card, CardHeader, CardContent } from \"~/components/ui/Card\";\nimport { Button } from \"~/components/ui/Button\";\nimport { ArrowLeftToLine, ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight, X, Maximize } from \"lucide-react\";\nimport { ThemeToggle } from \"~/components/ThemeToggle\";\nimport { User } from \"lucide-react\";\nexport const ThumbnailGallery = ({\n  images,\n  selectedImage,\n  onSelectImage,\n  onRemoveImage,\n  onExpandImage,\n  onClearAll,\n  onNext,\n  onPrevious,\n  currentIndex,\n  totalImages,\n  currentPage,\n  totalPages,\n  onChangePage\n}) => {\n  _s();\n  const [hoverIndex, setHoverIndex] = useState(null);\n  return <header className=\"mb-6\">\n      <Card>\n        <CardHeader className=\"px-6 py-4\">\n          <div className=\"grid grid-cols-3 items-center w-full\">\n            {/* Left aligned: Back button and Clear All */}\n            <div className=\"flex items-center gap-2 justify-self-start\">\n              <Button variant=\"secondary\" size=\"sm\" asChild>\n                <Link to=\"/\">\n                  <ArrowLeftToLine className=\"mr-1 h-4 w-4\" />\n                  Back to Upload\n                </Link>\n              </Button>\n\n              {images.length > 0 ? <Button variant=\"destructive\" size=\"sm\" onClick={onClearAll}>\n                  Clear All\n                </Button> : <span className=\"text-sm text-zinc-500 flex items-center ml-2\">\n                  Please add images \uD83D\uDE22\n                </span>}\n            </div>\n\n            {/* Center aligned: Pagination */}\n            <div className=\"justify-self-center flex items-center\">\n              {selectedImage && <div className=\"flex items-center\">\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => onSelectImage(images[0], 0)} aria-label=\"First image\" disabled={currentIndex === 0 || images.length === 0} className=\"mr-1\">\n                    <ChevronsLeft className=\"h-4 w-4\" />\n                  </Button>\n\n                  <Button variant=\"outline\" size=\"sm\" onClick={onPrevious} aria-label=\"Previous image\" disabled={currentIndex === 0 || images.length === 0}>\n                    <ChevronLeft className=\"h-4 w-4\" />\n                  </Button>\n\n                  <span className=\"text-sm text-muted-foreground px-3\">\n                    Image {currentIndex + 1} of {totalImages}\n                  </span>\n\n                  <Button variant=\"outline\" size=\"sm\" onClick={onNext} aria-label=\"Next image\" disabled={currentIndex === totalImages - 1 || images.length === 0}>\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </Button>\n\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => onSelectImage(images[totalImages - 1], totalImages - 1)} aria-label=\"Last image\" disabled={currentIndex === totalImages - 1 || images.length === 0} className=\"ml-1\">\n                    <ChevronsRight className=\"h-4 w-4\" />\n                  </Button>\n                </div>}\n            </div>\n\n            {/* Right aligned: Theme toggle and User icon */}\n            <div className=\"flex items-center gap-2 justify-self-end\">\n              <ThemeToggle />\n              <Button variant=\"secondary\" size=\"sm\">\n                <User size={18} />\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          <div className=\"flex gap-4 overflow-x-auto p-4 min-h-24 items-center scrollbar-thin well rounded-md\">\n            {images.length > 0 ? images.map((image, index) => <div key={index} className={`relative flex-none w-20 h-20 rounded cursor-pointer transition-all hover:-translate-y-1 ${selectedImage === image ? \"ring-2 ring-primary shadow-md\" : \"ring-2 ring-transparent\"}`} onClick={() => onSelectImage(image, index)} onMouseEnter={() => setHoverIndex(index)} onMouseLeave={() => setHoverIndex(null)} onKeyDown={e => {\n            if (e.key === \"Enter\" || e.key === \" \") {\n              onSelectImage(image, index);\n            }\n          }} tabIndex={0} role=\"button\" aria-label={`Select image ${image.name}`} aria-selected={selectedImage === image}>\n                  <img src={image.url} alt={image.name} className=\"w-full h-full object-cover rounded\" />\n\n                  {/* Hover controls */}\n                  {hoverIndex === index && <>\n                      {/* Expand button */}\n                      <button className=\"absolute top-0 left-0 p-1 bg-black/50 text-white rounded-br\" onClick={e => {\n                e.stopPropagation();\n                onExpandImage(image);\n              }} aria-label=\"Expand image\">\n                        <Maximize className=\"h-4 w-4\" />\n                      </button>\n\n                      {/* Remove button */}\n                      <button className=\"absolute top-0 right-0 p-1 bg-black/50 text-white rounded-bl\" onClick={e => {\n                e.stopPropagation();\n                onRemoveImage(index);\n              }} aria-label=\"Remove image\">\n                        <X className=\"h-4 w-4\" />\n                      </button>\n                    </>}\n                </div>) : <div className=\"w-full text-center text-muted-foreground py-4\">\n                <p>No images uploaded</p>\n              </div>}\n          </div>\n        </CardContent>\n      </Card>\n    </header>;\n};\n_s(ThumbnailGallery, \"7XGtNr9BsKihW2yVz9tMMtR5Dek=\");\n_c = ThumbnailGallery;\nexport default ThumbnailGallery;\nvar _c;\n$RefreshReg$(_c, \"ThumbnailGallery\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/gallery/ImagePreview.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/gallery/ImagePreview.tsx\");\n  import.meta.hot.lastModified = \"1743470621565.0933\";\n}\n// REMIX HMR END\n\nimport React, { useRef } from \"react\";\nimport { CardWithBorderTitle } from \"~/components/ui/Card\";\nexport const ImagePreview = ({\n  image,\n  cropMode,\n  cropRect,\n  onCropStart,\n  onCropMove,\n  onCropEnd\n}) => {\n  _s();\n  const containerRef = useRef(null);\n\n  // Handle crop start\n  const handleMouseDown = e => {\n    if (!cropMode || !containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    onCropStart(x, y);\n  };\n\n  // Handle crop drag\n  const handleMouseMove = e => {\n    if (!cropMode || !containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    onCropMove(x, y);\n  };\n\n  // Handle crop end\n  const handleMouseUp = () => {\n    if (!cropMode) return;\n    onCropEnd();\n  };\n\n  // Using CardWithBorderTitle instead of Card with CardHeader\n  return <CardWithBorderTitle title={<>\n          <span className=\"text-lg font-semibold leading-none tracking-tight\">\n            Image Preview\n          </span>\n          <span className=\"block text-sm text-slate-500 dark:text-slate-300 truncate mt-1\">\n            {image.name}\n          </span>\n        </>} cardClassName=\"md:col-span-2\" contentClassName=\"p-4\">\n      <div ref={containerRef} className={`rounded-md flex items-center justify-center p-2 h-64 md:h-72 lg:h-96 relative ${cropMode ? \"cursor-crosshair\" : \"\"}`} onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp} onMouseLeave={handleMouseUp}>\n        <img src={image.url} alt={image.name} className=\"max-w-full max-h-full object-contain\" />\n\n        {/* Crop overlay */}\n        {cropMode && cropRect && <div className=\"absolute border-2 border-white bg-black bg-opacity-30\" style={{\n        left: cropRect.x + \"px\",\n        top: cropRect.y + \"px\",\n        width: cropRect.width + \"px\",\n        height: cropRect.height + \"px\"\n      }}></div>}\n      </div>\n    </CardWithBorderTitle>;\n};\n_s(ImagePreview, \"5okL0DAk6Atnb3+Rru+wGBWyP+4=\");\n_c = ImagePreview;\nexport default ImagePreview;\nvar _c;\n$RefreshReg$(_c, \"ImagePreview\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/gallery/ImageModal.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/gallery/ImageModal.tsx\");\n  import.meta.hot.lastModified = \"1742625071452.403\";\n}\n// REMIX HMR END\n\nimport React, { useEffect } from \"react\";\nexport const ImageModal = ({\n  image,\n  onClose\n}) => {\n  _s();\n  // Add key event listener for escape key\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // // Prevent scrolling while modal is open\n    // document.body.style.overflow = \"hidden\";\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.style.overflow = \"auto\";\n    };\n  }, [onClose]);\n  if (!image) return null;\n  return <div className=\"fixed inset-0 bg-black/80 z-50 flex items-center justify-center p-4 backdrop-blur-sm\" onClick={onClose}>\n      <div className=\"relative max-w-[90vw] max-h-[90vh] overflow-hidden\" onClick={e => e.stopPropagation()}>\n        {/* Close button */}\n        <button className=\"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded-full\" onClick={onClose}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n\n        {/* Image */}\n        <img src={image.url} alt={image.name} className=\"max-w-full max-h-[90vh] object-contain\" />\n\n        {/* Image info */}\n        <div className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white p-4 text-sm\">\n          <p className=\"font-medium\">{image.name}</p>\n          <p className=\"opacity-80 text-xs\">\n            {image.type} - {Math.round(image.size / 1024)} KB\n          </p>\n        </div>\n      </div>\n    </div>;\n};\n_s(ImageModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/gallery/ControlsCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/gallery/ControlsCard.tsx\");\n  import.meta.hot.lastModified = \"1743478821885.0818\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from \"react\";\nimport { CardWithBorderTitle } from \"~/components/ui/Card\";\nimport { Button } from \"~/components/ui/Button\";\nimport { Ratio, Square, RotateCcw, Download, Crop, Check, Save, Image as ImageIcon } from \"lucide-react\";\nimport { downloadImage as downloadImageUtil } from \"~/utils/fileUtils\";\nimport SimpleSelect from \"~/components/ui/SimpleSelect\";\nexport const ControlsCard = ({\n  image,\n  cropMode,\n  formatOption,\n  compressionLevel,\n  onToggleCrop,\n  onFormatChange,\n  onCompressionChange,\n  onDimensionsChange,\n  onApplyChanges,\n  onCancelChanges,\n  hasCropSelection,\n  onApplyCrop\n}) => {\n  _s();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [originalWidth, setOriginalWidth] = useState(0);\n  const [originalHeight, setOriginalHeight] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(1);\n  const [maintainAspectRatio, setMaintainAspectRatio] = useState(true);\n  const [isResizing, setIsResizing] = useState(false);\n\n  // Define format options for SimpleSelect\n  const formatOptions = [{\n    value: \"original\",\n    label: \"Original\"\n  }, {\n    value: \"jpeg\",\n    label: \"JPEG\"\n  }, {\n    value: \"webp\",\n    label: \"WebP\"\n  }];\n\n  // Load image dimensions when image changes\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      const w = img.naturalWidth;\n      const h = img.naturalHeight;\n      setWidth(w);\n      setHeight(h);\n      setOriginalWidth(w);\n      setOriginalHeight(h);\n      setAspectRatio(w / h);\n    };\n    img.src = image.url;\n  }, [image.url]);\n\n  // Width slider change handler\n  const handleWidthChange = e => {\n    const newWidth = Number(e.target.value);\n    setWidth(newWidth);\n    if (maintainAspectRatio) {\n      const newHeight = Math.round(newWidth / aspectRatio);\n      setHeight(newHeight);\n    }\n    setIsResizing(true);\n  };\n\n  // Height slider change handler\n  const handleHeightChange = e => {\n    const newHeight = Number(e.target.value);\n    setHeight(newHeight);\n    if (maintainAspectRatio) {\n      const newWidth = Math.round(newHeight * aspectRatio);\n      setWidth(newWidth);\n    }\n    setIsResizing(true);\n  };\n\n  // Apply dimensions changes\n  const applyDimensionsChange = () => {\n    onDimensionsChange(width, height, maintainAspectRatio);\n    setIsResizing(false);\n  };\n\n  // Toggle aspect ratio lock\n  const toggleAspectRatio = () => {\n    setMaintainAspectRatio(!maintainAspectRatio);\n  };\n\n  // Reset dimensions to original\n  const resetDimensions = () => {\n    setWidth(originalWidth);\n    setHeight(originalHeight);\n    setIsResizing(true);\n  };\n\n  // Handle download\n  const handleDownload = () => {\n    if (image) {\n      downloadImageUtil(image);\n    }\n  };\n\n  // Handle compression slider change\n  const handleCompressionChange = e => {\n    onCompressionChange(Number(e.target.value));\n  };\n\n  // Handle format change\n  const handleFormatChange = format => {\n    onFormatChange(format);\n  };\n\n  // Handle reset all changes\n  const handleResetAll = () => {\n    // Reset dimensions to original\n    setWidth(originalWidth);\n    setHeight(originalHeight);\n    setIsResizing(false);\n\n    // Call the parent's reset function\n    onCancelChanges();\n  };\n  return <CardWithBorderTitle title={<span className=\"text-lg font-medium\">Image Controls</span>} cardClassName=\"bg-card\">\n      <div className=\"space-y-6\">\n        {/* Quick actions */}\n        <div className=\"flex flex-wrap gap-2 justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Button variant={cropMode ? \"primary\" : \"secondary\"} size=\"sm\" onClick={onToggleCrop} className=\"flex items-center gap-1\">\n              <Crop size={16} />\n              {cropMode ? \"Cancel Crop\" : \"Crop\"}\n            </Button>\n\n            {cropMode && hasCropSelection && <Button variant=\"primary\" size=\"sm\" onClick={onApplyCrop} className=\"flex items-center gap-1\">\n                <Check size={16} />\n                Apply Crop\n              </Button>}\n          </div>\n\n          <Button variant=\"secondary\" size=\"sm\" onClick={handleDownload} className=\"flex items-center gap-1\">\n            <Download size={16} />\n            Download\n          </Button>\n        </div>\n\n        {/* Image dimensions controls */}\n        <div>\n          <h3 className=\"text-sm font-medium mb-3\">Dimensions</h3>\n          <div className=\"space-y-4\">\n            {/* Width control */}\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between\">\n                <label className=\"text-xs\">Width: {width}px</label>\n                <span className=\"text-xs text-muted-foreground\">\n                  Original: {originalWidth}px\n                </span>\n              </div>\n              <input type=\"range\" min={50} max={originalWidth * 2} value={width} onChange={handleWidthChange} className=\"w-full\" />\n            </div>\n\n            {/* Height control */}\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between\">\n                <label className=\"text-xs\">Height: {height}px</label>\n                <span className=\"text-xs text-muted-foreground\">\n                  Original: {originalHeight}px\n                </span>\n              </div>\n              <input type=\"range\" min={50} max={originalHeight * 2} value={height} onChange={handleHeightChange} className=\"w-full\" />\n            </div>\n\n            <div className=\"flex flex-wrap gap-2\">\n              <Button onClick={toggleAspectRatio} variant={maintainAspectRatio ? \"primary\" : \"secondary\"} size=\"sm\" title={maintainAspectRatio ? \"Aspect ratio locked\" : \"Aspect ratio unlocked\"} className=\"flex items-center gap-1.5\">\n                {maintainAspectRatio ? <>\n                    <Ratio size={14} />\n                    <span>Aspect Ratio Locked</span>\n                  </> : <>\n                    <Square size={14} />\n                    <span>Aspect Ratio Unlocked</span>\n                  </>}\n              </Button>\n\n              <Button onClick={resetDimensions} variant=\"secondary\" size=\"sm\" title=\"Reset to original dimensions\" className=\"flex items-center gap-1.5\">\n                <RotateCcw size={14} />\n                <span>Reset Dimensions</span>\n              </Button>\n            </div>\n\n            {isResizing && <Button variant=\"primary\" size=\"sm\" onClick={applyDimensionsChange} className=\"w-full mt-2\">\n                <Save size={14} className=\"mr-1\" />\n                Apply Dimensions\n              </Button>}\n          </div>\n        </div>\n\n        {/* Divider */}\n        <hr className=\"border-slate-200 dark:border-slate-700\" />\n\n        {/* Format and quality controls */}\n        <div>\n          <h3 className=\"text-sm font-medium mb-3\">Format & Quality</h3>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium\">Format:</span>\n              <SimpleSelect options={formatOptions} value={formatOption} onChange={handleFormatChange} className=\"w-28\" />\n            </div>\n\n            {/* Quality slider */}\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between\">\n                <label className=\"text-xs\">Quality: {compressionLevel}%</label>\n                <span className=\"text-xs text-muted-foreground\">\n                  Higher = Better Quality\n                </span>\n              </div>\n              <input type=\"range\" min=\"10\" max=\"100\" value={compressionLevel} onChange={handleCompressionChange} className=\"w-full\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Divider */}\n        <hr className=\"border-slate-200 dark:border-slate-700\" />\n\n        {/* Action buttons */}\n        <div className=\"flex justify-between\">\n          <Button variant=\"outline\" size=\"sm\" onClick={handleResetAll} className=\"flex items-center gap-1\">\n            <RotateCcw size={16} />\n            Reset All\n          </Button>\n\n          <Button variant=\"primary\" size=\"sm\" onClick={onApplyChanges} disabled={cropMode} className=\"flex items-center gap-1\">\n            <Check size={16} />\n            Apply Changes\n          </Button>\n        </div>\n\n        {/* Technical details */}\n        <div className=\"mt-4 text-xs text-muted-foreground\">\n          <p>\n            <ImageIcon size={12} className=\"inline mr-1\" />\n            {image.name} ({(image.size / 1024).toFixed(1)} KB)\n          </p>\n          <p className=\"mt-1\">\n            {width && height ? `${width} \u00D7 ${height}px` : \"\"} \u2022{\" \"}\n            {image.type.split(\"/\")[1].toUpperCase()}\n          </p>\n        </div>\n      </div>\n    </CardWithBorderTitle>;\n};\n_s(ControlsCard, \"xUJEjKW7Y6s6qrIL0zPIEH+vz1Y=\");\n_c = ControlsCard;\nexport default ControlsCard;\nvar _c;\n$RefreshReg$(_c, \"ControlsCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ui/SimpleSelect.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ui/SimpleSelect.tsx\");\n  import.meta.hot.lastModified = \"1742628670011.8904\";\n}\n// REMIX HMR END\n\n// ~/components/ui/SimpleSelect.tsx\nimport * as React from \"react\";\nimport { ChevronDown } from \"lucide-react\";\nexport const SimpleSelect = ({\n  options,\n  value,\n  onChange,\n  placeholder = \"Select an option\",\n  label,\n  className = \"\",\n  disabled = false\n}) => {\n  // Find the selected option's label\n  const selectedOption = options.find(option => option.value === value);\n  const displayText = selectedOption ? selectedOption.label : placeholder;\n  return <div className={`relative inline-block ${className}`}>\n      {label && <label htmlFor=\"select\" className=\"block mb-1 text-sm font-medium\">\n          {label}\n        </label>}\n      <div className=\"relative\">\n        <select id=\"select\" value={value} onChange={e => onChange(e.target.value)} disabled={disabled} className=\"block w-full h-9 appearance-none rounded-md border border-slate-200 bg-white px-3 py-2 text-sm pr-8 focus:outline-none focus:ring-2 focus:ring-slate-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:focus:ring-slate-300\">\n          {!selectedOption && <option value=\"\" disabled>\n              {placeholder}\n            </option>}\n          {options.map(option => <option key={option.value} value={option.value}>\n              {option.label}\n            </option>)}\n        </select>\n        <ChevronDown className=\"pointer-events-none absolute right-2.5 top-2.5 h-4 w-4 opacity-50\" />\n      </div>\n    </div>;\n};\n_c = SimpleSelect;\nexport default SimpleSelect;\nvar _c;\n$RefreshReg$(_c, \"SimpleSelect\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAAA,gBAA4C;;;ACA5C,mBAAgC;AAgCd;AApDlB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kDAAoD,EAAE;AAAA,EAC/F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6C;AAC7C,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,mBAAmB,CAAC;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,KAAG;AACH,QAAM,CAAC,YAAY,aAAa,QAAI,uBAAS,IAAI;AACjD,SAAO,mDAAC,YAAO,WAAU,QACrB,6DAAC,QACC;AAAA,uDAAC,cAAW,WAAU,aACpB,6DAAC,SAAI,WAAU,wCAEb;AAAA,yDAAC,SAAI,WAAU,8CACb;AAAA,2DAAC,UAAO,SAAQ,aAAY,MAAK,MAAK,SAAO,MAC3C,6DAAC,QAAK,IAAG,KACP;AAAA,6DAAC,mBAAgB,WAAU,kBAA3B;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA,UAAE;AAAA,aAD9C;AAAA;AAAA;AAAA;AAAA,eAGA,KAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QAEC,OAAO,SAAS,IAAI,mDAAC,UAAO,SAAQ,eAAc,MAAK,MAAK,SAAS,YAAY,yBAA7D;AAAA;AAAA;AAAA;AAAA,eAEnB,IAAY,mDAAC,UAAK,WAAU,gDAA+C,2CAA/D;AAAA;AAAA;AAAA;AAAA,eAEZ;AAAA,WAZJ;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MAGA,mDAAC,SAAI,WAAU,yCACZ,2BAAiB,mDAAC,SAAI,WAAU,qBAC7B;AAAA,2DAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,MAAM,cAAc,OAAO,CAAC,GAAG,CAAC,GAAG,cAAW,eAAc,UAAU,iBAAiB,KAAK,OAAO,WAAW,GAAG,WAAU,QACtK,6DAAC,gBAAa,WAAU,aAAxB;AAAA;AAAA;AAAA;AAAA,eAAkC,KADpC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,YAAY,cAAW,kBAAiB,UAAU,iBAAiB,KAAK,OAAO,WAAW,GACrI,6DAAC,eAAY,WAAU,aAAvB;AAAA;AAAA;AAAA;AAAA,eAAiC,KADnC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC,UAAK,WAAU,sCAAqC;AAAA;AAAA,UAC5C,eAAe;AAAA,UAAE;AAAA,UAAK;AAAA,aAD/B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,QAAQ,cAAW,cAAa,UAAU,iBAAiB,cAAc,KAAK,OAAO,WAAW,GAC3I,6DAAC,gBAAa,WAAU,aAAxB;AAAA;AAAA;AAAA;AAAA,eAAkC,KADpC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,MAAM,cAAc,OAAO,cAAc,CAAC,GAAG,cAAc,CAAC,GAAG,cAAW,cAAa,UAAU,iBAAiB,cAAc,KAAK,OAAO,WAAW,GAAG,WAAU,QAC/M,6DAAC,iBAAc,WAAU,aAAzB;AAAA;AAAA;AAAA;AAAA,eAAmC,KADrC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAnBc;AAAA;AAAA;AAAA;AAAA,aAoBhB,KArBJ;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,MAGA,mDAAC,SAAI,WAAU,4CACb;AAAA,2DAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,eAAa;AAAA,QACb,mDAAC,UAAO,SAAQ,aAAY,MAAK,MAC/B,6DAAC,QAAK,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA,eAAgB,KADlB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,SAhDF;AAAA;AAAA;AAAA;AAAA,WAiDA,KAlDF;AAAA;AAAA;AAAA;AAAA,WAmDA;AAAA,IAEA,mDAAC,eACC,6DAAC,SAAI,WAAU,uFACZ,iBAAO,SAAS,IAAI,OAAO,IAAI,CAAC,OAAO,UAAU,mDAAC,SAAgB,WAAW,2FAA2F,kBAAkB,QAAQ,kCAAkC,6BAA6B,SAAS,MAAM,cAAc,OAAO,KAAK,GAAG,cAAc,MAAM,cAAc,KAAK,GAAG,cAAc,MAAM,cAAc,IAAI,GAAG,WAAW,OAAK;AACjZ,UAAI,EAAE,QAAQ,WAAW,EAAE,QAAQ,KAAK;AACtC,sBAAc,OAAO,KAAK;AAAA,MAC5B;AAAA,IACF,GAAG,UAAU,GAAG,MAAK,UAAS,cAAY,gBAAgB,MAAM,QAAQ,iBAAe,kBAAkB,OACjG;AAAA,yDAAC,SAAI,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,WAAU,wCAAhD;AAAA;AAAA;AAAA;AAAA,aAAqF;AAAA,MAGpF,eAAe,SAAS,sFAErB;AAAA,2DAAC,YAAO,WAAU,+DAA8D,SAAS,OAAK;AACpG,YAAE,gBAAgB;AAClB,wBAAc,KAAK;AAAA,QACrB,GAAG,cAAW,gBACJ,6DAAC,YAAS,WAAU,aAApB;AAAA;AAAA;AAAA;AAAA,eAA8B,KAJhC;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QAGA,mDAAC,YAAO,WAAU,gEAA+D,SAAS,OAAK;AACrG,YAAE,gBAAgB;AAClB,wBAAc,KAAK;AAAA,QACrB,GAAG,cAAW,gBACJ,6DAAC,KAAE,WAAU,aAAb;AAAA;AAAA;AAAA;AAAA,eAAuB,KAJzB;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAfqB;AAAA;AAAA;AAAA;AAAA,aAgBvB;AAAA,SAxBoD,OAAV;AAAA;AAAA;AAAA;AAAA,WAyB9C,CAAM,IAAI,mDAAC,SAAI,WAAU,iDACzB,6DAAC,OAAE,kCAAH;AAAA;AAAA;AAAA;AAAA,WAAqB,KADX;AAAA;AAAA;AAAA;AAAA,WAEZ,KA5BJ;AAAA;AAAA;AAAA;AAAA,WA6BA,KA9BF;AAAA;AAAA;AAAA;AAAA,WA+BA;AAAA,OArFF;AAAA;AAAA;AAAA;AAAA,SAsFA,KAvFG;AAAA;AAAA;AAAA;AAAA,SAwFL;AACJ;AACA,GAAG,kBAAkB,8BAA8B;AACnD,KAAK;AACL,IAAO,2BAAQ;AACf,IAAI;AACJ,aAAa,IAAI,kBAAkB;AAEnC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACzHtB,IAAAC,gBAA8B;AAsCO,IAAAC,0BAAA;AA1DrC,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AAKO,IAAM,eAAe,CAAC;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,EAAAA,IAAG;AACH,QAAM,mBAAe,sBAAO,IAAI;AAGhC,QAAM,kBAAkB,OAAK;AAC3B,QAAI,CAAC,YAAY,CAAC,aAAa;AAAS;AACxC,UAAM,OAAO,aAAa,QAAQ,sBAAsB;AACxD,UAAM,IAAI,EAAE,UAAU,KAAK;AAC3B,UAAM,IAAI,EAAE,UAAU,KAAK;AAC3B,gBAAY,GAAG,CAAC;AAAA,EAClB;AAGA,QAAM,kBAAkB,OAAK;AAC3B,QAAI,CAAC,YAAY,CAAC,aAAa;AAAS;AACxC,UAAM,OAAO,aAAa,QAAQ,sBAAsB;AACxD,UAAM,IAAI,EAAE,UAAU,KAAK;AAC3B,UAAM,IAAI,EAAE,UAAU,KAAK;AAC3B,eAAW,GAAG,CAAC;AAAA,EACjB;AAGA,QAAM,gBAAgB,MAAM;AAC1B,QAAI,CAAC;AAAU;AACf,cAAU;AAAA,EACZ;AAGA,SAAO,oDAAC,uBAAoB,OAAO,wFAC3B;AAAA,wDAAC,UAAK,WAAU,qDAAoD,6BAApE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,UAAK,WAAU,kEACb,gBAAM,QADT;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAN2B;AAAA;AAAA;AAAA;AAAA,SAO7B,GAAK,eAAc,iBAAgB,kBAAiB,OACtD,8DAAC,SAAI,KAAK,cAAc,WAAW,iFAAiF,WAAW,qBAAqB,MAAM,aAAa,iBAAiB,aAAa,iBAAiB,WAAW,eAAe,cAAc,eAC5P;AAAA,wDAAC,SAAI,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,WAAU,0CAAhD;AAAA;AAAA;AAAA;AAAA,WAAuF;AAAA,IAGtF,YAAY,YAAY,oDAAC,SAAI,WAAU,yDAAwD,OAAO;AAAA,MACvG,MAAM,SAAS,IAAI;AAAA,MACnB,KAAK,SAAS,IAAI;AAAA,MAClB,OAAO,SAAS,QAAQ;AAAA,MACxB,QAAQ,SAAS,SAAS;AAAA,IAC5B,KAL2B;AAAA;AAAA;AAAA;AAAA,WAKxB;AAAA,OATH;AAAA;AAAA;AAAA;AAAA,SAUA,KAlBG;AAAA;AAAA;AAAA;AAAA,SAmBL;AACJ;AACAA,IAAG,cAAc,8BAA8B;AAC/CC,MAAK;AACL,IAAO,uBAAQ;AACf,IAAIA;AACJ,aAAaA,KAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AClEtB,IAAAC,gBAAiC;AA6BrB,IAAAC,0BAAA;AAjDZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4CAA8C,EAAE;AAAA,EACzF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuC;AACvC,cAAY,IAAI,eAAe;AACjC;AAIO,IAAM,aAAa,CAAC;AAAA,EACzB;AAAA,EACA;AACF,MAAM;AACJ,EAAAA,IAAG;AAEH,+BAAU,MAAM;AACd,UAAM,gBAAgB,OAAK;AACzB,UAAI,EAAE,QAAQ,UAAU;AACtB,gBAAQ;AAAA,MACV;AAAA,IACF;AACA,WAAO,iBAAiB,WAAW,aAAa;AAKhD,WAAO,MAAM;AACX,aAAO,oBAAoB,WAAW,aAAa;AACnD,eAAS,KAAK,MAAM,WAAW;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,OAAO,CAAC;AACZ,MAAI,CAAC;AAAO,WAAO;AACnB,SAAO,oDAAC,SAAI,WAAU,wFAAuF,SAAS,SAClH,8DAAC,SAAI,WAAU,sDAAqD,SAAS,OAAK,EAAE,gBAAgB,GAElG;AAAA,wDAAC,YAAO,WAAU,uEAAsE,SAAS,SAC/F,8DAAC,SAAI,OAAM,8BAA6B,OAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,MAAK,QAAO,QAAO,gBAAe,aAAY,KAAI,eAAc,SAAQ,gBAAe,SACxK;AAAA,0DAAC,UAAK,IAAG,MAAK,IAAG,KAAI,IAAG,KAAI,IAAG,QAA/B;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,MACpC,oDAAC,UAAK,IAAG,KAAI,IAAG,KAAI,IAAG,MAAK,IAAG,QAA/B;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,SAFtC;AAAA;AAAA;AAAA;AAAA,WAGA,KAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAGA,oDAAC,SAAI,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,WAAU,4CAAhD;AAAA;AAAA;AAAA;AAAA,WAAyF;AAAA,IAGzF,oDAAC,SAAI,WAAU,uEACb;AAAA,0DAAC,OAAE,WAAU,eAAe,gBAAM,QAAlC;AAAA;AAAA;AAAA;AAAA,aAAuC;AAAA,MACvC,oDAAC,OAAE,WAAU,sBACV;AAAA,cAAM;AAAA,QAAK;AAAA,QAAI,KAAK,MAAM,MAAM,OAAO,IAAI;AAAA,QAAE;AAAA,WADhD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA,KApBG;AAAA;AAAA;AAAA;AAAA,SAqBL;AACJ;AACAA,IAAG,YAAY,8BAA8B;AAC7CC,MAAK;AACL,IAAO,qBAAQ;AACf,IAAIA;AACJ,aAAaA,KAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACtDtB,IAAAC,gBAA2C;;;ACe3B,IAAAC,0BAAA;AAnChB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAMO,IAAM,eAAe,CAAC;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA,YAAY;AAAA,EACZ,WAAW;AACb,MAAM;AAEJ,QAAM,iBAAiB,QAAQ,KAAK,YAAU,OAAO,UAAU,KAAK;AACpE,QAAM,cAAc,iBAAiB,eAAe,QAAQ;AAC5D,SAAO,oDAAC,SAAI,WAAW,yBAAyB,aAC3C;AAAA,aAAS,oDAAC,WAAM,SAAQ,UAAS,WAAU,kCACvC,mBADK;AAAA;AAAA;AAAA;AAAA,WAER;AAAA,IACF,oDAAC,SAAI,WAAU,YACb;AAAA,0DAAC,YAAO,IAAG,UAAS,OAAc,UAAU,OAAK,SAAS,EAAE,OAAO,KAAK,GAAG,UAAoB,WAAU,kSACtG;AAAA,SAAC,kBAAkB,oDAAC,YAAO,OAAM,IAAG,UAAQ,MACxC,yBADe;AAAA;AAAA;AAAA;AAAA,eAElB;AAAA,QACD,QAAQ,IAAI,YAAU,oDAAC,YAA0B,OAAO,OAAO,OAC3D,iBAAO,SADwB,OAAO,OAApB;AAAA;AAAA;AAAA;AAAA,eAErB,CAAS;AAAA,WANb;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,oDAAC,eAAY,WAAU,uEAAvB;AAAA;AAAA;AAAA;AAAA,aAA2F;AAAA,SAT7F;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACAC,MAAK;AACL,IAAO,uBAAQ;AACf,IAAIA;AACJ,aAAaA,KAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADsFe,IAAAC,0BAAA;AA/IrC,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AASO,IAAM,eAAe,CAAC;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,EAAAA,IAAG;AACH,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,CAAC;AACpC,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,CAAC;AACtC,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAS,CAAC;AACpD,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,wBAAS,CAAC;AACtD,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAS,CAAC;AAChD,QAAM,CAAC,qBAAqB,sBAAsB,QAAI,wBAAS,IAAI;AACnE,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,KAAK;AAGlD,QAAM,gBAAgB,CAAC;AAAA,IACrB,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GAAG;AAAA,IACD,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AAGD,+BAAU,MAAM;AACd,UAAM,MAAM,IAAI,MAAM;AACtB,QAAI,SAAS,MAAM;AACjB,YAAM,IAAI,IAAI;AACd,YAAM,IAAI,IAAI;AACd,eAAS,CAAC;AACV,gBAAU,CAAC;AACX,uBAAiB,CAAC;AAClB,wBAAkB,CAAC;AACnB,qBAAe,IAAI,CAAC;AAAA,IACtB;AACA,QAAI,MAAM,MAAM;AAAA,EAClB,GAAG,CAAC,MAAM,GAAG,CAAC;AAGd,QAAM,oBAAoB,OAAK;AAC7B,UAAM,WAAW,OAAO,EAAE,OAAO,KAAK;AACtC,aAAS,QAAQ;AACjB,QAAI,qBAAqB;AACvB,YAAM,YAAY,KAAK,MAAM,WAAW,WAAW;AACnD,gBAAU,SAAS;AAAA,IACrB;AACA,kBAAc,IAAI;AAAA,EACpB;AAGA,QAAM,qBAAqB,OAAK;AAC9B,UAAM,YAAY,OAAO,EAAE,OAAO,KAAK;AACvC,cAAU,SAAS;AACnB,QAAI,qBAAqB;AACvB,YAAM,WAAW,KAAK,MAAM,YAAY,WAAW;AACnD,eAAS,QAAQ;AAAA,IACnB;AACA,kBAAc,IAAI;AAAA,EACpB;AAGA,QAAM,wBAAwB,MAAM;AAClC,uBAAmB,OAAO,QAAQ,mBAAmB;AACrD,kBAAc,KAAK;AAAA,EACrB;AAGA,QAAM,oBAAoB,MAAM;AAC9B,2BAAuB,CAAC,mBAAmB;AAAA,EAC7C;AAGA,QAAM,kBAAkB,MAAM;AAC5B,aAAS,aAAa;AACtB,cAAU,cAAc;AACxB,kBAAc,IAAI;AAAA,EACpB;AAGA,QAAM,iBAAiB,MAAM;AAC3B,QAAI,OAAO;AACT,oBAAkB,KAAK;AAAA,IACzB;AAAA,EACF;AAGA,QAAM,0BAA0B,OAAK;AACnC,wBAAoB,OAAO,EAAE,OAAO,KAAK,CAAC;AAAA,EAC5C;AAGA,QAAM,qBAAqB,YAAU;AACnC,mBAAe,MAAM;AAAA,EACvB;AAGA,QAAM,iBAAiB,MAAM;AAE3B,aAAS,aAAa;AACtB,cAAU,cAAc;AACxB,kBAAc,KAAK;AAGnB,oBAAgB;AAAA,EAClB;AACA,SAAO,oDAAC,uBAAoB,OAAO,oDAAC,UAAK,WAAU,uBAAsB,8BAAtC;AAAA;AAAA;AAAA;AAAA,SAAoD,GAAS,eAAc,WAC1G,8DAAC,SAAI,WAAU,aAEb;AAAA,wDAAC,SAAI,WAAU,wCACb;AAAA,0DAAC,SAAI,WAAU,2BACb;AAAA,4DAAC,UAAO,SAAS,WAAW,YAAY,aAAa,MAAK,MAAK,SAAS,cAAc,WAAU,2BAC9F;AAAA,8DAAC,QAAK,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAAA,UACf,WAAW,gBAAgB;AAAA,aAF9B;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEC,YAAY,oBAAoB,oDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,aAAa,WAAU,2BACjG;AAAA,8DAAC,SAAM,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA,iBAAiB;AAAA,UAAE;AAAA,aADU;AAAA;AAAA;AAAA;AAAA,eAG/B;AAAA,WATJ;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MAEA,oDAAC,UAAO,SAAQ,aAAY,MAAK,MAAK,SAAS,gBAAgB,WAAU,2BACvE;AAAA,4DAAC,YAAS,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,QAAE;AAAA,WADxB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,IAGA,oDAAC,SACC;AAAA,0DAAC,QAAG,WAAU,4BAA2B,0BAAzC;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,MACnD,oDAAC,SAAI,WAAU,aAEb;AAAA,4DAAC,SAAI,WAAU,aACb;AAAA,8DAAC,SAAI,WAAU,wBACb;AAAA,gEAAC,WAAM,WAAU,WAAU;AAAA;AAAA,cAAQ;AAAA,cAAM;AAAA,iBAAzC;AAAA;AAAA;AAAA;AAAA,mBAA2C;AAAA,YAC3C,oDAAC,UAAK,WAAU,iCAAgC;AAAA;AAAA,cACnC;AAAA,cAAc;AAAA,iBAD3B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UACA,oDAAC,WAAM,MAAK,SAAQ,KAAK,IAAI,KAAK,gBAAgB,GAAG,OAAO,OAAO,UAAU,mBAAmB,WAAU,YAA1G;AAAA;AAAA;AAAA;AAAA,iBAAmH;AAAA,aAPrH;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QAGA,oDAAC,SAAI,WAAU,aACb;AAAA,8DAAC,SAAI,WAAU,wBACb;AAAA,gEAAC,WAAM,WAAU,WAAU;AAAA;AAAA,cAAS;AAAA,cAAO;AAAA,iBAA3C;AAAA;AAAA;AAAA;AAAA,mBAA6C;AAAA,YAC7C,oDAAC,UAAK,WAAU,iCAAgC;AAAA;AAAA,cACnC;AAAA,cAAe;AAAA,iBAD5B;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UACA,oDAAC,WAAM,MAAK,SAAQ,KAAK,IAAI,KAAK,iBAAiB,GAAG,OAAO,QAAQ,UAAU,oBAAoB,WAAU,YAA7G;AAAA;AAAA;AAAA;AAAA,iBAAsH;AAAA,aAPxH;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QAEA,oDAAC,SAAI,WAAU,wBACb;AAAA,8DAAC,UAAO,SAAS,mBAAmB,SAAS,sBAAsB,YAAY,aAAa,MAAK,MAAK,OAAO,sBAAsB,wBAAwB,yBAAyB,WAAU,6BAC3L,gCAAsB,wFACnB;AAAA,gEAAC,SAAM,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA,mBAAiB;AAAA,YACjB,oDAAC,UAAK,mCAAN;AAAA;AAAA;AAAA;AAAA,mBAAyB;AAAA,eAFN;AAAA;AAAA;AAAA;AAAA,iBAGrB,IAAM,wFACJ;AAAA,gEAAC,UAAO,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAAA,YAClB,oDAAC,UAAK,qCAAN;AAAA;AAAA;AAAA;AAAA,mBAA2B;AAAA,eAFvB;AAAA;AAAA;AAAA;AAAA,iBAGN,KAPJ;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UAEA,oDAAC,UAAO,SAAS,iBAAiB,SAAQ,aAAY,MAAK,MAAK,OAAM,gCAA+B,WAAU,6BAC7G;AAAA,gEAAC,aAAU,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA,mBAAqB;AAAA,YACrB,oDAAC,UAAK,gCAAN;AAAA;AAAA;AAAA;AAAA,mBAAsB;AAAA,eAFxB;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA,eAeA;AAAA,QAEC,cAAc,oDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,uBAAuB,WAAU,eACzF;AAAA,8DAAC,QAAK,MAAM,IAAI,WAAU,UAA1B;AAAA;AAAA;AAAA;AAAA,iBAAiC;AAAA,UAAE;AAAA,aADxB;AAAA;AAAA;AAAA;AAAA,eAGb;AAAA,WA3CJ;AAAA;AAAA;AAAA;AAAA,aA4CA;AAAA,SA9CF;AAAA;AAAA;AAAA;AAAA,WA+CA;AAAA,IAGA,oDAAC,QAAG,WAAU,4CAAd;AAAA;AAAA;AAAA;AAAA,WAAuD;AAAA,IAGvD,oDAAC,SACC;AAAA,0DAAC,QAAG,WAAU,4BAA2B,gCAAzC;AAAA;AAAA;AAAA;AAAA,aAAyD;AAAA,MAEzD,oDAAC,SAAI,WAAU,aACb;AAAA,4DAAC,SAAI,WAAU,2BACb;AAAA,8DAAC,UAAK,WAAU,uBAAsB,uBAAtC;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,UAC7C,oDAAC,wBAAa,SAAS,eAAe,OAAO,cAAc,UAAU,oBAAoB,WAAU,UAAnG;AAAA;AAAA;AAAA;AAAA,iBAA0G;AAAA,aAF5G;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAGA,oDAAC,SAAI,WAAU,aACb;AAAA,8DAAC,SAAI,WAAU,wBACb;AAAA,gEAAC,WAAM,WAAU,WAAU;AAAA;AAAA,cAAU;AAAA,cAAiB;AAAA,iBAAtD;AAAA;AAAA;AAAA;AAAA,mBAAuD;AAAA,YACvD,oDAAC,UAAK,WAAU,iCAAgC,uCAAhD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UACA,oDAAC,WAAM,MAAK,SAAQ,KAAI,MAAK,KAAI,OAAM,OAAO,kBAAkB,UAAU,yBAAyB,WAAU,YAA7G;AAAA;AAAA;AAAA;AAAA,iBAAsH;AAAA,aAPxH;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,WAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,SAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,IAGA,oDAAC,QAAG,WAAU,4CAAd;AAAA;AAAA;AAAA;AAAA,WAAuD;AAAA,IAGvD,oDAAC,SAAI,WAAU,wBACb;AAAA,0DAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,gBAAgB,WAAU,2BACrE;AAAA,4DAAC,aAAU,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,QAAE;AAAA,WADzB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA,oDAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,gBAAgB,UAAU,UAAU,WAAU,2BACzF;AAAA,4DAAC,SAAM,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA,eAAiB;AAAA,QAAE;AAAA,WADrB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IAGA,oDAAC,SAAI,WAAU,sCACb;AAAA,0DAAC,OACC;AAAA,4DAACC,QAAA,EAAU,MAAM,IAAI,WAAU,iBAA/B;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,QAC5C,MAAM;AAAA,QAAK;AAAA,SAAI,MAAM,OAAO,MAAM,QAAQ,CAAC;AAAA,QAAE;AAAA,WAFhD;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,oDAAC,OAAE,WAAU,QACV;AAAA,iBAAS,SAAS,GAAG,cAAW,aAAa;AAAA,QAAG;AAAA,QAAG;AAAA,QACnD,MAAM,KAAK,MAAM,GAAG,EAAE,CAAC,EAAE,YAAY;AAAA,WAFxC;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OA3HF;AAAA;AAAA;AAAA;AAAA,SA4HA,KA7HG;AAAA;AAAA;AAAA;AAAA,SA8HL;AACJ;AACAD,IAAG,cAAc,8BAA8B;AAC/CE,MAAK;AACL,IAAO,uBAAQ;AACf,IAAIA;AACJ,aAAaA,KAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AJrBd,IAAAC,0BAAA;AAjQR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAUe,SAAR,UAA2B;AAChC,EAAAA,IAAG;AACH,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,CAAC,CAAC;AACvC,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAS,IAAI;AACvD,QAAM,CAAC,mBAAmB,oBAAoB,QAAI,wBAAS,CAAC;AAC5D,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAS,IAAI;AACvD,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAS,CAAC;AAChD,QAAM,gBAAgB;AAGtB,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,KAAK;AAC9C,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,IAAI;AACjD,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,IAAI;AACjD,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,IAAI;AAC7C,QAAM,CAAC,cAAc,eAAe,QAAI,wBAAS,UAAU;AAC3D,QAAM,CAAC,kBAAkB,mBAAmB,QAAI,wBAAS,EAAE;AAG3D,QAAM,sBAAkB,sBAAO,IAAI;AACnC,QAAM,WAAW,YAAY;AAG7B,QAAM,mBAAmB,cAAc;AACvC,QAAM,oBAAoB,mBAAmB;AAC7C,QAAM,gBAAgB,OAAO,MAAM,mBAAmB,gBAAgB;AACtE,QAAM,aAAa,KAAK,KAAK,OAAO,SAAS,aAAa;AAC1D,QAAM,WAAW,gBAAc,eAAe,UAAU;AACxD,+BAAU,MAAM;AAEd,UAAM,eAAe,iBAAiB;AACtC,QAAI,gBAAgB,aAAa,SAAS,GAAG;AAC3C,gBAAU,YAAY;AACtB,uBAAiB,aAAa,CAAC,CAAC;AAChC,2BAAqB,CAAC;AAAA,IACxB,WAAW,gBAAgB,aAAa,WAAW,GAAG;AACpD,gBAAU,CAAC,CAAC;AACZ,uBAAiB,IAAI;AAAA,IACvB,OAAO;AAEL,YAAM,QAAQ,WAAW,MAAM;AAC7B,iBAAS,GAAG;AAAA,MACd,GAAG,GAAI;AACP,aAAO,MAAM,aAAa,KAAK;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AAGb,+BAAU,MAAM;AACd,QAAI,eAAe;AACjB,YAAM,MAAM,IAAI,MAAM;AACtB,UAAI,SAAS,MAAM;AACjB,wBAAgB,UAAU;AAAA,MAC5B;AACA,UAAI,MAAM,cAAc;AAGxB,kBAAY,KAAK;AACjB,kBAAY,IAAI;AAChB,sBAAgB,UAAU;AAC1B,0BAAoB,EAAE;AAAA,IACxB;AAAA,EACF,GAAG,CAAC,aAAa,CAAC;AAGlB,QAAM,oBAAoB,CAAC,OAAO,UAAU;AAC1C,qBAAiB,KAAK;AACtB,yBAAqB,KAAK;AAAA,EAC5B;AACA,QAAM,eAAe,MAAM;AACzB,QAAI,OAAO,WAAW;AAAG;AACzB,UAAM,aAAa,oBAAoB,KAAK,OAAO;AACnD,qBAAiB,OAAO,SAAS,CAAC;AAClC,yBAAqB,SAAS;AAAA,EAChC;AACA,QAAM,mBAAmB,MAAM;AAC7B,QAAI,OAAO,WAAW;AAAG;AACzB,UAAM,aAAa,oBAAoB,IAAI,OAAO,UAAU,OAAO;AACnE,qBAAiB,OAAO,SAAS,CAAC;AAClC,yBAAqB,SAAS;AAAA,EAChC;AAGA,QAAM,iBAAiB,MAAM;AAC3B,8BAA0B;AAC1B,cAAU,CAAC,CAAC;AACZ,qBAAiB,IAAI;AAAA,EACvB;AACA,QAAM,cAAc,WAAS;AAC3B,UAAM,YAAY,CAAC,GAAG,MAAM;AAC5B,cAAU,OAAO,OAAO,CAAC;AAGzB,cAAU,SAAS;AACnB,0BAAsB,SAAS;AAG/B,QAAI,sBAAsB,OAAO;AAC/B,UAAI,UAAU,SAAS,GAAG;AACxB,cAAM,WAAW,KAAK,IAAI,OAAO,UAAU,SAAS,CAAC;AACrD,yBAAiB,UAAU,QAAQ,CAAC;AACpC,6BAAqB,QAAQ;AAAA,MAC/B,OAAO;AACL,yBAAiB,IAAI;AAAA,MACvB;AAAA,IACF,WAAW,oBAAoB,OAAO;AAEpC,2BAAqB,oBAAoB,CAAC;AAAA,IAC5C;AAAA,EACF;AAGA,QAAM,cAAc,WAAS;AAC3B,qBAAiB,KAAK;AAAA,EACxB;AAGA,QAAM,kBAAkB,CAAC,GAAG,MAAM;AAChC,kBAAc,CAAC;AACf,kBAAc,CAAC;AACf,gBAAY,IAAI;AAAA,EAClB;AACA,QAAM,iBAAiB,CAAC,GAAG,MAAM;AAC/B,QAAI,eAAe,QAAQ,eAAe;AAAM;AAChD,gBAAY;AAAA,MACV,GAAG,KAAK,IAAI,YAAY,CAAC;AAAA,MACzB,GAAG,KAAK,IAAI,YAAY,CAAC;AAAA,MACzB,OAAO,KAAK,IAAI,IAAI,UAAU;AAAA,MAC9B,QAAQ,KAAK,IAAI,IAAI,UAAU;AAAA,IACjC,CAAC;AAAA,EACH;AACA,QAAM,gBAAgB,MAAM;AAC1B,kBAAc,IAAI;AAClB,kBAAc,IAAI;AAAA,EACpB;AAGA,QAAM,iBAAiB,MAAM;AAC3B,gBAAY,CAAC,QAAQ;AACrB,QAAI,UAAU;AAEZ,kBAAY,IAAI;AAAA,IAClB;AAAA,EACF;AAGA,QAAM,YAAY,YAAY;AAC5B,QAAI,CAAC,YAAY,CAAC,gBAAgB,WAAW,CAAC;AAAe;AAG7D,UAAM,mBAAmB,SAAS,cAAc,0BAA0B;AAC1E,QAAI,CAAC;AAAkB;AACvB,QAAI;AACF,YAAM,aAAa,MAAM,UAAU,gBAAgB,SAAS,UAAU,cAAc,kBAAkB,gBAAgB;AACtH,sBAAgB,UAAU;AAG1B,kBAAY,KAAK;AACjB,kBAAY,IAAI;AAAA,IAClB,SAAS,OAAP;AACA,cAAQ,MAAM,wBAAwB,KAAK;AAAA,IAC7C;AAAA,EACF;AAGA,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC,gBAAgB,WAAW,CAAC;AAAe;AAChD,QAAI;AACF,YAAM,aAAa,MAAM,aAAa,gBAAgB,SAAS,cAAc,gBAAgB;AAC7F,sBAAgB,UAAU;AAAA,IAC5B,SAAS,OAAP;AACA,cAAQ,MAAM,2BAA2B,KAAK;AAAA,IAChD;AAAA,EACF;AAGA,QAAM,yBAAyB,OAAO,OAAO,QAAQ,wBAAwB;AAC3E,QAAI,CAAC,gBAAgB,WAAW,CAAC;AAAe;AAChD,QAAI;AACF,YAAM,aAAa,MAAM,YAAY,gBAAgB,SAAS,OAAO,QAAQ,cAAc,gBAAgB;AAC3G,sBAAgB,UAAU;AAAA,IAC5B,SAAS,OAAP;AACA,cAAQ,MAAM,yBAAyB,KAAK;AAAA,IAC9C;AAAA,EACF;AAGA,QAAM,gBAAgB,MAAM;AAE1B,QAAI,eAAe;AACjB,YAAM,MAAM,IAAI,MAAM;AACtB,UAAI,SAAS,MAAM;AACjB,wBAAgB,UAAU;AAAA,MAC5B;AACA,UAAI,MAAM,cAAc;AAGxB,kBAAY,KAAK;AACjB,kBAAY,IAAI;AAChB,sBAAgB,UAAU;AAC1B,0BAAoB,EAAE;AAAA,IACxB;AAAA,EACF;AAGA,QAAM,kBAAkB,gBAAc;AACpC,QAAI,CAAC;AAAe;AAGpB,UAAM,WAAW,qBAAqB,eAAe,YAAY,YAAY;AAG7E,UAAM,YAAY,CAAC,GAAG,MAAM;AAC5B,cAAU,iBAAiB,IAAI;AAG/B,cAAU,SAAS;AACnB,qBAAiB,QAAQ;AACzB,0BAAsB,SAAS;AAG/B,UAAM,MAAM,IAAI,MAAM;AACtB,QAAI,SAAS,MAAM;AACjB,sBAAgB,UAAU;AAAA,IAC5B;AACA,QAAI,MAAM,SAAS;AAAA,EACrB;AACA,SAAO,oDAAC,SAAI,WAAU,mCAElB;AAAA,wDAAC,SAAI,WAAU,yBAEb;AAAA,0DAAC,4BAAiB,QAAgB,eAA8B,eAAe,mBAAmB,eAAe,aAAa,eAAe,aAAa,YAAY,gBAAgB,QAAQ,cAAc,YAAY,kBAAkB,cAAc,mBAAmB,aAAa,OAAO,QAAQ,cAAc,UAAU,aAA0B,cAAzV;AAAA;AAAA;AAAA;AAAA,aAAiX;AAAA,MAGhX,iBAAiB,oDAAC,SAAI,WAAU,8CAE7B;AAAA,4DAAC,SAAI,WAAU,yCACb,8DAAC,wBAAa,OAAO,eAAe,UAAoB,UAAoB,aAAa,iBAAiB,YAAY,gBAAgB,WAAW,iBAAjJ;AAAA;AAAA;AAAA;AAAA,eAAgK,KADlK;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAGA,oDAAC,SAAI,WAAU,iBACb,8DAAC,wBAAa,OAAO,eAAe,UAAoB,cAA4B,kBAAoC,cAAc,gBAAgB,gBAAgB,iBAAiB,qBAAqB,qBAAqB,oBAAoB,wBAAwB,gBAAgB,cAAc,iBAAiB,eAAe,kBAAkB,aAAa,MAAM,aAAa,aAA7X;AAAA;AAAA;AAAA;AAAA,eAAwY,KAD1Y;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WATc;AAAA;AAAA;AAAA;AAAA,aAUhB;AAAA,MAGD,OAAO,SAAS,KAAK,CAAC,iBAAiB,oDAAC,SAAI,WAAU,wDAClD,wBAAc,IAAI,CAAC,OAAO,UAAU,oDAAC,SAAI,WAAU,2DAAsE,SAAS,MAAM,kBAAkB,OAAO,oBAAoB,KAAK,GACvL,8DAAC,SAAI,KAAK,MAAM,KAAK,KAAK,iBAAiB,oBAAoB,QAAQ,KAAK,WAAU,gDAAtF;AAAA;AAAA;AAAA;AAAA,aAAmI,KADpB,OAA9E;AAAA;AAAA;AAAA;AAAA,aAEnC,CAAM,KAH4B;AAAA;AAAA;AAAA;AAAA,aAItC;AAAA,SAtBJ;AAAA;AAAA;AAAA;AAAA,WAuBA;AAAA,IAGA,oDAAC,sBAAW,OAAO,eAAe,SAAS,MAAM,iBAAiB,IAAI,KAAtE;AAAA;AAAA;AAAA;AAAA,WAAyE;AAAA,OA5BtE;AAAA;AAAA;AAAA;AAAA,SA6BL;AACJ;AACAA,IAAG,SAAS,gCAAgC,OAAO,WAAY;AAC7D,SAAO,CAAC,WAAW;AACrB,CAAC;AACDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "_s", "_c", "import_react", "import_jsx_dev_runtime", "_s", "_c", "import_react", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "Image", "_c", "import_jsx_dev_runtime", "_s", "_c"]
}
